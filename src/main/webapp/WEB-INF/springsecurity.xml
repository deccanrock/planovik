<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
xmlns:beans="http://www.springframework.org/schema/beans"
xmlns:context="http://www.springframework.org/schema/context"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
http://www.springframework.org/schema/security
http://www.springframework.org/schema/security/spring-security-3.2.xsd">
<http auto-config="true" use-expressions="true">
<intercept-url pattern="/app**" access="hasRole('ROLE_USER')" />
<intercept-url pattern="/app/admin*" access="hasRole('ROLE_ADMIN')" />
<!-- access denied page -->
<access-denied-handler error-page="/app/error403" />
<form-login login-page="/app/login" default-target-url="/app"
authentication-failure-url="/app/login?error" username-parameter="username"
password-parameter="password" />
<logout invalidate-session="true"
logout-success-url="/app/login?logout" delete-cookies="JSESSIONID" />
<session-management invalid-session-url="/app/login">
<concurrency-control max-sessions="1" expired-url="/app/login" />
</session-management>
<!-- enable csrf protection -->
<csrf />
</http>
<beans:bean id="customUserDetailsService" class="com.deccanrock.planovik.service.CustomUserDetailsService">
<beans:property name="usersByUsernameQuery" value="select * from users where username = ?"/>
<beans:property name="authoritiesByUsernameQuery" value="select username, role from user_roles where username =?" />
<beans:property name="dataSource" ref="mainDataSource" />
</beans:bean>
<beans:bean id="userDetailsDao" class="com.deccanrock.planovik.service.dao.UserDetailsDao" >
<beans:property name="dataSource" ref="mainDataSource" />
</beans:bean>
<beans:bean id="authenticationProvider" class="com.deccanrock.planovik.security.AuthenticationProvider">
<beans:property name="userDetailsService" ref="customUserDetailsService" />
<beans:property name="userDetailsDao" ref="userDetailsDao" />
<beans:property name="passwordEncoder" ref="encoder" />
</beans:bean>
<beans:bean class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" id="encoder" />
<authentication-manager>
<authentication-provider ref="authenticationProvider">
</authentication-provider>
</authentication-manager>
</beans:beans>